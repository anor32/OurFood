
services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: ProductsDb
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}

    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  delivery:

    build: .
    tty: true
    image: delivery
    container_name: OurFood
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      POSTGRESQL_HOST: 'postgres'
      CACHE_ENABLED: "True"
      CACHE_LOCATION: "redis://redis:6379/1"

    command: >
      bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py loaddata backup/users.json &&
      python manage.py loaddata backup/products.json &&
      python manage.py runserver 0.0.0.0:8000"
    ports:
      - '127.0.0.1:8000:8000'

volumes:
  postgres_data:
  redis_data: